// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Demo page clear and export buttons should be disabled when demo is loading 1`] = `
<Split
  gutter="md"
  style={
    Object {
      "overflowY": "auto",
    }
  }
>
  <SplitItem
    isFilled={false}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "width": "320px",
      }
    }
  >
    <TextContent>
      <Text
        component="h1"
      >
        Demo
      </Text>
    </TextContent>
    <SearchBox
      addHandler={[Function]}
      boundingBox={null}
      countryCodeSearchFilter={
        Array [
          "XY",
        ]
      }
      searchDelay={500}
    />
    <LocationList
      depot={
        Object {
          "id": 1,
          "lat": 1.345678,
          "lng": 1.345678,
        }
      }
      removeHandler={[MockFunction]}
      selectHandler={[Function]}
      visits={
        Array [
          Object {
            "id": 2,
            "lat": 2.345678,
            "lng": 2.345678,
          },
          Object {
            "id": 3,
            "lat": 3.676111,
            "lng": 3.568333,
          },
        ]
      }
    />
  </SplitItem>
  <SplitItem
    isFilled={true}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <Flex
      breakpointMods={
        Array [
          Object {
            "modifier": "justify-content-space-between",
          },
        ]
      }
    >
      <FlexItem>
        <VisitsInfo
          visitCount={2}
        />
      </FlexItem>
      <FlexItem>
        <CapacityInfo
          totalCapacity={5}
          totalDemand={2}
        />
      </FlexItem>
      <FlexItem>
        <Flex>
          <FlexItem>
            <VehiclesInfo />
          </FlexItem>
          <FlexItem>
            <InputGroup>
              <Component
                isDisabled={false}
                onClick={[Function]}
                variant="primary"
              >
                <MinusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
              <InputGroupText
                readOnly={true}
              >
                8
              </InputGroupText>
              <Component
                data-cy="demo-add-vehicle"
                onClick={[Function]}
                variant="primary"
              >
                <PlusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
            </InputGroup>
          </FlexItem>
        </Flex>
      </FlexItem>
      <FlexItem>
        <DistanceInfo
          distance="10"
        />
      </FlexItem>
      <FlexItem>
        <Component
          id="export-button"
          isDisabled={true}
          onClick={[Function]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Export
        </Component>
        <Component
          data-cy="demo-clear-button"
          id="clear-button"
          isDisabled={true}
          onClick={[MockFunction]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Clear
        </Component>
      </FlexItem>
    </Flex>
    <RouteMap
      boundingBox={null}
      clickHandler={[Function]}
      depot={
        Object {
          "id": 1,
          "lat": 1.345678,
          "lng": 1.345678,
        }
      }
      removeHandler={[MockFunction]}
      routes={
        Array [
          Object {
            "track": Array [],
            "vehicle": Object {
              "capacity": 5,
              "id": 1,
              "name": "v1",
            },
            "visits": Array [
              Object {
                "id": 1,
                "lat": 1.345678,
                "lng": 1.345678,
              },
              Object {
                "id": 2,
                "lat": 2.345678,
                "lng": 2.345678,
              },
              Object {
                "id": 3,
                "lat": 3.676111,
                "lng": 3.568333,
              },
            ],
          },
        ]
      }
      selectedId={NaN}
      updateViewport={[MockFunction]}
      userViewport={
        Object {
          "center": Array [
            0,
            0,
          ],
          "isDirty": false,
          "zoom": 1,
        }
      }
      visits={
        Array [
          Object {
            "id": 2,
            "lat": 2.345678,
            "lng": 2.345678,
          },
          Object {
            "id": 3,
            "lat": 3.676111,
            "lng": 3.568333,
          },
        ]
      }
    />
  </SplitItem>
</Split>
`;

exports[`Demo page clear button should replace demo dropdown as soon as there is a depot 1`] = `
<Split
  gutter="md"
  style={
    Object {
      "overflowY": "auto",
    }
  }
>
  <SplitItem
    isFilled={false}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "width": "320px",
      }
    }
  >
    <TextContent>
      <Text
        component="h1"
      >
        Demo
      </Text>
    </TextContent>
    <SearchBox
      addHandler={[Function]}
      boundingBox={null}
      countryCodeSearchFilter={Array []}
      searchDelay={500}
    />
    <LocationList
      depot={
        Object {
          "description": "",
          "id": 1,
          "lat": 1,
          "lng": 1,
        }
      }
      removeHandler={[MockFunction]}
      selectHandler={[Function]}
      visits={Array []}
    />
  </SplitItem>
  <SplitItem
    isFilled={true}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <Flex
      breakpointMods={
        Array [
          Object {
            "modifier": "justify-content-space-between",
          },
        ]
      }
    >
      <FlexItem>
        <VisitsInfo
          visitCount={0}
        />
      </FlexItem>
      <FlexItem>
        <CapacityInfo
          totalCapacity={0}
          totalDemand={0}
        />
      </FlexItem>
      <FlexItem>
        <Flex>
          <FlexItem>
            <VehiclesInfo />
          </FlexItem>
          <FlexItem>
            <InputGroup>
              <Component
                isDisabled={true}
                onClick={[Function]}
                variant="primary"
              >
                <MinusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
              <InputGroupText
                readOnly={true}
              >
                0
              </InputGroupText>
              <Component
                data-cy="demo-add-vehicle"
                onClick={[Function]}
                variant="primary"
              >
                <PlusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
            </InputGroup>
          </FlexItem>
        </Flex>
      </FlexItem>
      <FlexItem>
        <DistanceInfo
          distance="0"
        />
      </FlexItem>
      <FlexItem>
        <Component
          id="export-button"
          isDisabled={false}
          onClick={[Function]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Export
        </Component>
        <Component
          data-cy="demo-clear-button"
          id="clear-button"
          isDisabled={false}
          onClick={[MockFunction]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Clear
        </Component>
      </FlexItem>
    </Flex>
    <RouteMap
      boundingBox={null}
      clickHandler={[Function]}
      depot={
        Object {
          "description": "",
          "id": 1,
          "lat": 1,
          "lng": 1,
        }
      }
      removeHandler={[MockFunction]}
      routes={Array []}
      selectedId={NaN}
      updateViewport={[MockFunction]}
      userViewport={
        Object {
          "center": Array [
            0,
            0,
          ],
          "isDirty": false,
          "zoom": 1,
        }
      }
      visits={Array []}
    />
  </SplitItem>
</Split>
`;

exports[`Demo page should render correctly with a few routes 1`] = `
<Split
  gutter="md"
  style={
    Object {
      "overflowY": "auto",
    }
  }
>
  <SplitItem
    isFilled={false}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "width": "320px",
      }
    }
  >
    <TextContent>
      <Text
        component="h1"
      >
        Demo
      </Text>
    </TextContent>
    <SearchBox
      addHandler={[Function]}
      boundingBox={null}
      countryCodeSearchFilter={
        Array [
          "XY",
        ]
      }
      searchDelay={500}
    />
    <LocationList
      depot={
        Object {
          "id": 1,
          "lat": 1.345678,
          "lng": 1.345678,
        }
      }
      removeHandler={[MockFunction]}
      selectHandler={[Function]}
      visits={
        Array [
          Object {
            "id": 2,
            "lat": 2.345678,
            "lng": 2.345678,
          },
          Object {
            "id": 3,
            "lat": 3.676111,
            "lng": 3.568333,
          },
        ]
      }
    />
  </SplitItem>
  <SplitItem
    isFilled={true}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <Flex
      breakpointMods={
        Array [
          Object {
            "modifier": "justify-content-space-between",
          },
        ]
      }
    >
      <FlexItem>
        <VisitsInfo
          visitCount={2}
        />
      </FlexItem>
      <FlexItem>
        <CapacityInfo
          totalCapacity={5}
          totalDemand={2}
        />
      </FlexItem>
      <FlexItem>
        <Flex>
          <FlexItem>
            <VehiclesInfo />
          </FlexItem>
          <FlexItem>
            <InputGroup>
              <Component
                isDisabled={false}
                onClick={[Function]}
                variant="primary"
              >
                <MinusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
              <InputGroupText
                readOnly={true}
              >
                8
              </InputGroupText>
              <Component
                data-cy="demo-add-vehicle"
                onClick={[Function]}
                variant="primary"
              >
                <PlusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
            </InputGroup>
          </FlexItem>
        </Flex>
      </FlexItem>
      <FlexItem>
        <DistanceInfo
          distance="10"
        />
      </FlexItem>
      <FlexItem>
        <Component
          id="export-button"
          isDisabled={false}
          onClick={[Function]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Export
        </Component>
        <Component
          data-cy="demo-clear-button"
          id="clear-button"
          isDisabled={false}
          onClick={[MockFunction]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Clear
        </Component>
      </FlexItem>
    </Flex>
    <RouteMap
      boundingBox={null}
      clickHandler={[Function]}
      depot={
        Object {
          "id": 1,
          "lat": 1.345678,
          "lng": 1.345678,
        }
      }
      removeHandler={[MockFunction]}
      routes={
        Array [
          Object {
            "track": Array [],
            "vehicle": Object {
              "capacity": 5,
              "id": 1,
              "name": "v1",
            },
            "visits": Array [
              Object {
                "id": 1,
                "lat": 1.345678,
                "lng": 1.345678,
              },
              Object {
                "id": 2,
                "lat": 2.345678,
                "lng": 2.345678,
              },
              Object {
                "id": 3,
                "lat": 3.676111,
                "lng": 3.568333,
              },
            ],
          },
        ]
      }
      selectedId={NaN}
      updateViewport={[MockFunction]}
      userViewport={
        Object {
          "center": Array [
            0,
            0,
          ],
          "isDirty": false,
          "zoom": 1,
        }
      }
      visits={
        Array [
          Object {
            "id": 2,
            "lat": 2.345678,
            "lng": 2.345678,
          },
          Object {
            "id": 3,
            "lat": 3.676111,
            "lng": 3.568333,
          },
        ]
      }
    />
  </SplitItem>
</Split>
`;

exports[`Demo page should render correctly with no routes 1`] = `
<Split
  gutter="md"
  style={
    Object {
      "overflowY": "auto",
    }
  }
>
  <SplitItem
    isFilled={false}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "width": "320px",
      }
    }
  >
    <TextContent>
      <Text
        component="h1"
      >
        Demo
      </Text>
    </TextContent>
    <SearchBox
      addHandler={[Function]}
      boundingBox={null}
      countryCodeSearchFilter={Array []}
      searchDelay={500}
    />
    <LocationList
      depot={null}
      removeHandler={[MockFunction]}
      selectHandler={[Function]}
      visits={Array []}
    />
  </SplitItem>
  <SplitItem
    isFilled={true}
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
      }
    }
  >
    <Flex
      breakpointMods={
        Array [
          Object {
            "modifier": "justify-content-space-between",
          },
        ]
      }
    >
      <FlexItem>
        <VisitsInfo
          visitCount={0}
        />
      </FlexItem>
      <FlexItem>
        <CapacityInfo
          totalCapacity={0}
          totalDemand={0}
        />
      </FlexItem>
      <FlexItem>
        <Flex>
          <FlexItem>
            <VehiclesInfo />
          </FlexItem>
          <FlexItem>
            <InputGroup>
              <Component
                isDisabled={true}
                onClick={[Function]}
                variant="primary"
              >
                <MinusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
              <InputGroupText
                readOnly={true}
              >
                0
              </InputGroupText>
              <Component
                data-cy="demo-add-vehicle"
                onClick={[Function]}
                variant="primary"
              >
                <PlusIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
              </Component>
            </InputGroup>
          </FlexItem>
        </Flex>
      </FlexItem>
      <FlexItem>
        <DistanceInfo
          distance="0"
        />
      </FlexItem>
      <FlexItem>
        <Component
          id="export-button"
          isDisabled={true}
          onClick={[Function]}
          style={
            Object {
              "marginBottom": 16,
              "marginLeft": 16,
            }
          }
        >
          Export
        </Component>
        <DemoDropdown
          demos={
            Array [
              "demo",
            ]
          }
          onSelect={[Function]}
        />
      </FlexItem>
    </Flex>
    <RouteMap
      boundingBox={null}
      clickHandler={[Function]}
      depot={null}
      removeHandler={[MockFunction]}
      routes={Array []}
      selectedId={NaN}
      updateViewport={[MockFunction]}
      userViewport={
        Object {
          "center": Array [
            0,
            0,
          ],
          "isDirty": false,
          "zoom": 1,
        }
      }
      visits={Array []}
    />
  </SplitItem>
</Split>
`;
